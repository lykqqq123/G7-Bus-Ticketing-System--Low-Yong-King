/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkginterface;

import control.MaintainStaffControl;
import domain.Staff;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Student
 */
public class ViewAllStaff extends javax.swing.JFrame {

    MaintainStaffControl staffControl = new MaintainStaffControl();
    ResultSet rs;

    /**
     * Creates new form ViewAllStaff
     */
    public ViewAllStaff() {
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        rs = staffControl.getAllRecordNoPwd();
        int row = 0;
        try {
            while (rs.next()) {
                for (int col = 0; col < 9; col++) {
                    jTable1.setValueAt(rs.getString(col + 1), row, col);
                }
                row++;

            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewAllStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        staffID = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        staffIC = new javax.swing.JRadioButton();
        jtfSearch = new javax.swing.JTextField();
        jbtSearch = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        staffID.setText("Staff ID");
        staffID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffIDActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STAFF ID", "NAME", "IC", "DOB", "CONTACT", "POSITION", "STATUS", "ADDRESS", "EMAIL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        staffIC.setText("Staff IC");
        staffIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffICActionPerformed(evt);
            }
        });

        jbtSearch.setText("Search");
        jbtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSearchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Pristina", 1, 24)); // NOI18N
        jLabel1.setText("View All Staff Details");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(staffID)
                                .addGap(18, 18, 18)
                                .addComponent(staffIC))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(606, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffIC)
                    .addComponent(staffID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void staffIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffIDActionPerformed
        // TODO add your handling code here:
        staffIC.setSelected(false);
    }//GEN-LAST:event_staffIDActionPerformed

    private void staffICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffICActionPerformed
        // TODO add your handling code here:
        staffID.setSelected(false);
    }//GEN-LAST:event_staffICActionPerformed

    private void jbtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSearchActionPerformed
        // TODO add your handling code here:
        if (jtfSearch.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill in data to search.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            if (staffID.isSelected()) {
                Staff staff = staffControl.getRecordInID(jtfSearch.getText());
                //Clear jTable
                for (int row = 0; row < jTable1.getRowCount(); row++) {
                    for (int col = 0; col < 9; col++) {
                        jTable1.setValueAt("", row, col);
                    }
                }
                if (staff == null) {
                    JOptionPane.showMessageDialog(null, "This Staff ID Does Not Exist In Our Database.", "ERROR", JOptionPane.ERROR_MESSAGE);
                    jtfSearch.setText("");

                } else {
                    //Insert date into jTable
                    jTable1.setValueAt(staff.getStaffId(), 0, 0);
                    jTable1.setValueAt(staff.getStaffName(), 0, 1);
                    jTable1.setValueAt(staff.getStaffIc(), 0, 2);
                    jTable1.setValueAt(staff.getStaffDob(), 0, 3);
                    jTable1.setValueAt(staff.getStaffContactnum(), 0, 4);
                    jTable1.setValueAt(staff.getStaffPosition(), 0, 5);
                    jTable1.setValueAt(staff.getStaffStatus(), 0, 6);
                    jTable1.setValueAt(staff.getStaffAddress(), 0, 7);
                    jTable1.setValueAt(staff.getStaffEmail(), 0, 8);
                }

            } else if (staffIC.isSelected()) {
                Staff staff = staffControl.getRecordInWithIC(jtfSearch.getText());
                //Clear jTable
                for (int row = 0; row < jTable1.getRowCount(); row++) {
                    for (int col = 0; col < 9; col++) {
                        jTable1.setValueAt("", row, col);
                    }
                }
                if (staff == null) {
                    JOptionPane.showMessageDialog(null, "The IC Number Does Not Exist In Our Database.", "ERROR", JOptionPane.ERROR_MESSAGE);
                    jtfSearch.setText("");

                } else {
                    //Insert date into jTable
                    jTable1.setValueAt(staff.getStaffId(), 0, 0);
                    jTable1.setValueAt(staff.getStaffName(), 0, 1);
                    jTable1.setValueAt(staff.getStaffIc(), 0, 2);
                    jTable1.setValueAt(staff.getStaffDob(), 0, 3);
                    jTable1.setValueAt(staff.getStaffContactnum(), 0, 4);
                    jTable1.setValueAt(staff.getStaffPosition(), 0, 5);
                    jTable1.setValueAt(staff.getStaffStatus(), 0, 6);
                    jTable1.setValueAt(staff.getStaffAddress(), 0, 7);
                    jTable1.setValueAt(staff.getStaffEmail(), 0, 8);
                }
            }
//                else if (busStatusRB.isSelected()) {
//                ResultSet rs = bdControl.retrieveRecord();
//                //Clear jTable
//                for (int row = 0; row < jTable1.getRowCount(); row++) {
//                    for (int col = 0; col < 7; col++) {
//                        jTable1.setValueAt("", row, col);
//                    }
//                }
//                try {
//                    //Insert date into jTable
//                    int row=0;
//                    while (rs.next()) {
//                        int check =0;
//                        for (int col = 0; col < 7; col++) {
//                            if (rs.getString(4).equals(SearchTF.getText())) {
//                                jTable1.setValueAt(rs.getString(col + 1), row, col);
//                                check =1;
//                            }
//                        }
//                        if(check==1){
//                            row++;
//                        }
//                    }
//                    if(jTable1.getValueAt(0, 0).equals("")){
//                        JOptionPane.showMessageDialog(null, "Record not found.", "ERROR", JOptionPane.ERROR_MESSAGE);
//                    }
//                } catch (SQLException ex) {
//                    Logger.getLogger(ViewAllBus.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            } 
            else {
                JOptionPane.showMessageDialog(null, "Please select 1 option to search.");
            }
        }

    }//GEN-LAST:event_jbtSearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAllStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAllStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAllStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAllStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewAllStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jbtSearch;
    private javax.swing.JTextField jtfSearch;
    private javax.swing.JRadioButton staffIC;
    private javax.swing.JRadioButton staffID;
    // End of variables declaration//GEN-END:variables
}
