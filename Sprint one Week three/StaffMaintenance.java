package pkginterface;

import static com.sun.javafx.tk.Toolkit.getToolkit;
import control.MaintainStaffControl;
import domain.Staff;
import java.awt.*;
import java.awt.event.*;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;
import com.toedter.calendar.JDateChooser;
import java.lang.NumberFormatException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.text.DateFormat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editora.
 */
/**
 *
 * @author Student
 */
public class StaffMaintenance extends javax.swing.JFrame {

    private static String loginUser;
    private MaintainStaffControl staffControl;

    public StaffMaintenance() {
        initComponents();
        setLocationRelativeTo(null);
        staffControl = new MaintainStaffControl();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtfIC = new javax.swing.JTextField();
        jtfEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jcbPosition = new javax.swing.JComboBox();
        jcbStaffStatus = new javax.swing.JComboBox();
        jtfContact = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jdcDOB = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaAddr = new javax.swing.JTextArea();
        jtfID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jbtSearch = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Pristina", 3, 48)); // NOI18N
        jLabel1.setText("              Staff Maintenance System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setText("Date Of Birth*");

        jLabel5.setText("Staff IC*");

        jLabel6.setText("Staff Position*");

        jLabel8.setText("Staff Status*");

        jLabel9.setText("Staff Address*");

        jLabel10.setText("Staff Email*");

        jtfIC.setName(""); // NOI18N
        jtfIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfICKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfICKeyTyped(evt);
            }
        });

        jtfEmail.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jtfEmailCaretUpdate(evt);
            }
        });
        jtfEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEmailActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText("* means compulsory to fill in.");

        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton4.setText("Add Staff");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStaff(evt);
            }
        });

        jButton3.setText("Update Staff");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("View All Staff");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jcbPosition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal Staff", "Manager" }));
        jcbPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPositionActionPerformed(evt);
            }
        });

        jcbStaffStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Working", "Resign", "Retired" }));

        jtfContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfContactActionPerformed(evt);
            }
        });
        jtfContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfContactKeyTyped(evt);
            }
        });

        jLabel7.setText("Contact Number*");

        jtfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Staff Name*");

        jdcDOB.setDateFormatString("d-M-yyyy"); // NOI18N

        jtaAddr.setColumns(20);
        jtaAddr.setLineWrap(true);
        jtaAddr.setRows(5);
        jtaAddr.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jtaAddr);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jdcDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfIC, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbStaffStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfContact, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 85, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcbStaffStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdcDOB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );

        jtfID.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jtfIDCaretUpdate(evt);
            }
        });
        jtfID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfIDActionPerformed(evt);
            }
        });

        jLabel3.setText("Employee ID");

        jbtSearch.setText("Search");
        jbtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtSearchMouseClicked(evt);
            }
        });
        jbtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(234, 234, 234))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtSearch))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddStaff(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStaff
        Date date = new Date();
        Date date2 = jdcDOB.getDate();

        Staff checkIC = staffControl.getRecordInWithIC(jtfIC.getText());

        if (checkIC != null) {
            JOptionPane.showMessageDialog(rootPane, "This Staff is already exist.");
        } else {

            String staffIC = "[0-9]{12}";
            String staffContact = "[0-9]{10}";
            String staffEmail = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
            Staff staff = staffControl.getLastRow();
            if (staff != null) {
                int tempIntStaffID = Integer.parseInt(staff.getStaffId());
                tempIntStaffID += 1;
                String tempStrStaffID = null;
                if (tempIntStaffID <= 9) {
                    tempStrStaffID = "0000" + tempIntStaffID;
                } else if (tempIntStaffID <= 99) {
                    tempStrStaffID = "000" + tempIntStaffID;
                } else if (tempIntStaffID <= 999) {
                    tempStrStaffID = "00" + tempIntStaffID;
                } else if (tempIntStaffID <= 9999) {
                    tempStrStaffID = "0" + tempIntStaffID;
                } else if (tempIntStaffID <= 99999) {
                    tempStrStaffID = "" + tempIntStaffID;
                }

                String staffStatus;
                if (jcbStaffStatus.getSelectedIndex() == 0) {
                    staffStatus = "Working";
                } else if (jcbStaffStatus.getSelectedIndex() == 1) {
                    staffStatus = "Resign";
                } else {
                    staffStatus = "Retired";
                }
                String Position;
                if (jcbPosition.getSelectedIndex() == 0) {
                    Position = "Normal Staff";
                } else {
                    Position = "Manager";
                }
                String Pwd;
                Pwd = jtfIC.getText();

                if (jtfName.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Name Cannot Be Blank!!", "Inane warning", JOptionPane.WARNING_MESSAGE);
                } else if (!jtfIC.getText().matches(staffIC) || jtfIC.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "IC Invalid Input Or Blank!!\nStaff IC : 12 digits only.", "Inane warning", JOptionPane.WARNING_MESSAGE);
                } else if (!jtfContact.getText().matches(staffContact) || jtfContact.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Contact Number Invalid Input Or Blank!!\nContact Number : 10 digits only.", "Inane warning", JOptionPane.WARNING_MESSAGE);
                } else if (!jtfEmail.getText().matches(staffEmail)) {
                    JOptionPane.showMessageDialog(null, "Staff Email Invalid Input Or Blank!!\nStaff Email : xxx@xxx.com", "Inane warning", JOptionPane.WARNING_MESSAGE);
                } else if (((JTextField) jdcDOB.getDateEditor().getUiComponent()).getText().equals(null)) {
                    JOptionPane.showMessageDialog(null, "Date Of Birth Cannot be Blank!!", "Inane warning", JOptionPane.WARNING_MESSAGE);
                } else if (((Math.abs(date.getTime() - date2.getTime())) / (24 * 60 * 60 * 1000)) <= 5840) {
                    long diffDays = ((Math.abs(date.getTime() - date2.getTime())) / (24 * 60 * 60 * 1000));
                    double year = diffDays * 0.00273791;
                    float yearOld = (float) Math.round(year);
                    JOptionPane.showMessageDialog(null, "Only 16-year-old And Above Can be Hired to Our Company!\nHe/She is only " + yearOld + " years old!", "Inane warning", JOptionPane.WARNING_MESSAGE);
                    jdcDOB.setCalendar(null);
                } else if (jtaAddr.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Address Cannot be Blank!!", "Inane warning", JOptionPane.WARNING_MESSAGE);
                } else {
//                    SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy");

                    String DOB = ((JTextField) jdcDOB.getDateEditor().getUiComponent()).getText();

                    staff = new Staff(tempStrStaffID, Pwd, jtfName.getText(), jtfIC.getText(), DOB, jtfContact.getText(), Position, staffStatus, jtaAddr.getText(), jtfEmail.getText());
                    staffControl.addRecord(staff);
                    JOptionPane.showMessageDialog(null, "A New Staff Details is added!\nStaff ID     :" + tempStrStaffID + "\nPassword    :(IC) " + Pwd);
                    jtfName.setText("");
                    jtfIC.setText("");
                    jdcDOB.setDateFormatString("");
                    jtfContact.setText("");
                    jcbPosition.setSelectedIndex(0);
                    jtaAddr.setText("");
                    jcbStaffStatus.setSelectedIndex(0);
                    jtfEmail.setText("");

                }
            }
            if (staff == null) {
                String staffID = "00001";
                String StaffStatus;
                if (jcbStaffStatus.getSelectedIndex() == 0) {
                    StaffStatus = "Working";
                } else if (jcbStaffStatus.getSelectedIndex() == 1) {
                    StaffStatus = "Fired";
                } else {
                    StaffStatus = "Retired";
                }
                String position;
                if (jcbPosition.getSelectedIndex() == 0) {
                    position = "Normal Staff";
                } else {
                    position = "Manager";
                }

                String Pwd = jtfIC.getText();

                String DOB = ((JTextField) jdcDOB.getDateEditor().getUiComponent()).getText();

                staff = new Staff(staffID, Pwd, jtfName.getText(), jtfIC.getText(), DOB, jtfContact.getText(), position, StaffStatus, jtaAddr.getText(), jtfEmail.getText());
                staffControl.addRecord(staff);
                JOptionPane.showMessageDialog(null, "A New Staff Details is added!\nStaff ID     :" + staffID + "\nPassword    :(IC) " + Pwd);
                jtfName.setText("");
                jtfIC.setText("");
                jdcDOB.setDateFormatString("");
                jtfContact.setText("");
                jcbPosition.setSelectedIndex(0);
                jtaAddr.setText("");
                jcbStaffStatus.setSelectedIndex(0);
                jtfEmail.setText("");
            }
        }

    }//GEN-LAST:event_AddStaff

    private void jtfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNameActionPerformed

    private void jtfEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEmailActionPerformed

    private void jtfIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfIDActionPerformed

    private void jtfICKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfICKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfICKeyPressed

    private void jtfContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfContactActionPerformed

    private void jbtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSearchActionPerformed
        // TODO add your handling code here:
        if (jtfID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please insert Staff ID to search.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else if (loginUser.equals(jtfID.getText())) {
            JOptionPane.showMessageDialog(null, "You Can Only VIEW Your Own Details\nYou Can Not Change Any Details Of Yourself!", "Inane warning", JOptionPane.WARNING_MESSAGE);
            jtfName.setEnabled(false);
            jtfIC.setEnabled(false);
            jdcDOB.setEnabled(false);
            jtfContact.setEnabled(false);
            jtfEmail.setEnabled(false);
            jtaAddr.setEnabled(false);
            jcbStaffStatus.setEnabled(false);
            jcbPosition.setEnabled(false);
            Staff staff = staffControl.selectRecord(jtfID.getText());
            jtfName.setText(staff.getStaffName());
            jtfIC.setText(staff.getStaffIc());

            java.util.Date DATE = null;
            try {
                DATE = new SimpleDateFormat("d-M-yyyy").parse(staff.getStaffDob());
            } catch (ParseException ex) {
                Logger.getLogger(StaffMaintenance.class.getName()).log(Level.SEVERE, null, ex);
            }
            jdcDOB.setDate(DATE);
//            jdcDOB.setDateFormatString(staff.getStaffDob());

            int tempNo;
            if (staff.getStaffStatus().equals("Working")) {
                tempNo = 0;
            } else if (staff.getStaffStatus().equals("Fired")) {
                tempNo = 1;
            } else {
                tempNo = 2;
            }
            jcbStaffStatus.setSelectedIndex(tempNo);
            jtaAddr.setText(staff.getStaffAddress());
            jtfContact.setText(staff.getStaffContactnum());
            jtfEmail.setText(staff.getStaffEmail());
            if (staff.getStaffPosition().equals("Normal Staff")) {
                tempNo = 0;
            } else {
                tempNo = 1;
            }
            jcbPosition.setSelectedIndex(tempNo);
        } else {
            Staff staff = staffControl.selectRecord(jtfID.getText());
            if(staff != null){
            jtfName.setText(staff.getStaffName());
            jtfIC.setText(staff.getStaffIc());

            java.util.Date DATE = null;
            try {
                DATE = new SimpleDateFormat("d-M-yyyy").parse(staff.getStaffDob());
            } catch (ParseException ex) {
                Logger.getLogger(StaffMaintenance.class.getName()).log(Level.SEVERE, null, ex);
            }
            jdcDOB.setDate(DATE);
//            jdcDOB.setDateFormatString(staff.getStaffDob());

            int tempNo;
            if (staff.getStaffStatus().equals("Working")) {
                tempNo = 0;
            } else if (staff.getStaffStatus().equals("Fired")) {
                tempNo = 1;
            } else {
                tempNo = 2;
            }
            jcbStaffStatus.setSelectedIndex(tempNo);
            jtaAddr.setText(staff.getStaffAddress());
            jtfContact.setText(staff.getStaffContactnum());
            jtfEmail.setText(staff.getStaffEmail());
            if (staff.getStaffPosition().equals("Normal Staff")) {
                tempNo = 0;
            } else {
                tempNo = 1;
            }
            jcbPosition.setSelectedIndex(tempNo);
            }else{
            JOptionPane.showMessageDialog(null, "This Staff ID Does Not Exist In Our Database!", "Error warning", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbtSearchActionPerformed

    private void jcbPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbPositionActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        MainMenu s = new MainMenu();
        s.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String staffIC = "[0-9]{12}";
        String staffContact = "[0-9]{10}";
        String staffEmail = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
        String ID = jtfID.getText();
        String staffStatus;
        if (jcbStaffStatus.getSelectedIndex() == 0) {
            staffStatus = "Working";
        } else if (jcbStaffStatus.getSelectedIndex() == 1) {
            staffStatus = "Resign";
        } else {
            staffStatus = "Retired";
        }
        String Position;
        if (jcbPosition.getSelectedIndex() == 0) {
            Position = "Normal Staff";
        } else {
            Position = "Manager";
        }
        String Pwd;
        Pwd = jtfIC.getText();

        if (jtfName.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Name Cannot Be Blank!!", "Inane warning", JOptionPane.WARNING_MESSAGE);
        } else if (!jtfIC.getText().matches(staffIC) || jtfIC.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "IC Invalid Input Or Blank!!\nStaff IC : 12 digits only.", "Inane warning", JOptionPane.WARNING_MESSAGE);
        } else if (!jtfContact.getText().matches(staffContact) || jtfContact.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Contact Number Invalid Input Or Blank!!\nContact Number : 10 digits only.", "Inane warning", JOptionPane.WARNING_MESSAGE);
        } else if (!jtfEmail.getText().matches(staffEmail)) {
            JOptionPane.showMessageDialog(null, "Staff Email Invalid Input Or Blank!!\nStaff Email : xxx@xxx.com", "Inane warning", JOptionPane.WARNING_MESSAGE);
        } else if (jdcDOB.getDateFormatString().equals("")) {
            JOptionPane.showMessageDialog(null, "Date Of Birth Cannot be Blank!!", "Inane warning", JOptionPane.WARNING_MESSAGE);
        } else if (jtaAddr.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Address Cannot be Blank!!", "Inane warning", JOptionPane.WARNING_MESSAGE);
        } else if(loginUser.equals(jtfID.getText())){
            JOptionPane.showMessageDialog(null, "Your Details Can Not be Changed by Yourself!!", "Inane warning", JOptionPane.WARNING_MESSAGE);
        }else {
            String DOB = ((JTextField) jdcDOB.getDateEditor().getUiComponent()).getText();

            Staff staff = new Staff(ID, jtfName.getText(), jtfIC.getText(), DOB, jtfContact.getText(), Position, staffStatus, jtaAddr.getText(), jtfEmail.getText());
            staffControl.updateRecord(staff);
            JOptionPane.showMessageDialog(null, "A Modified Staff Details has been updated!");
            jtfName.setText("");
            jtfIC.setText("");
            jdcDOB.setDateFormatString("");
            jtfContact.setText("");
            jcbPosition.setSelectedIndex(0);
            jtaAddr.setText("");
            jcbStaffStatus.setSelectedIndex(0);
            jtfEmail.setText("");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jtfIDCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jtfIDCaretUpdate
        // TODO add your handling code here:
        if (!jtfID.getText().equals("")) {
            jButton4.setEnabled(false);
            jtfName.setEnabled(false);
            jtfIC.setEnabled(false);
            jdcDOB.setEnabled(false);

        } else {
            jButton4.setEnabled(true);
            jtfName.setEnabled(true);
            jtfIC.setEnabled(true);
            jdcDOB.setEnabled(true);
            jtfContact.setEnabled(true);
            jtfEmail.setEnabled(true);
            jtaAddr.setEnabled(true);
            jcbStaffStatus.setEnabled(true);
            jcbPosition.setEnabled(true);
            jButton3.setEnabled(false);

        }

    }//GEN-LAST:event_jtfIDCaretUpdate

    private void jbtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtSearchMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtSearchMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new ViewAllStaff();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jtfEmailCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jtfEmailCaretUpdate
        // TODO add your handling code here:
        if (!jtfID.getText().equals("") && !jtfName.getText().equals("") && !jtfIC.getText().equals("") && !jtfContact.getText().equals("") && !jtaAddr.getText().equals("") && !jtfEmail.getText().equals("")) {
            jButton3.setEnabled(true);

        } else if (jtfID.getText().equals("") || jtfName.getText().equals("") || jtfIC.getText().equals("") || jtfContact.getText().equals("") || jtaAddr.getText().equals("") || jtfEmail.getText().equals("")) {
            jButton3.setEnabled(false);
        }
    }//GEN-LAST:event_jtfEmailCaretUpdate

    private void jtfContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfContactKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE) ){
            evt.consume();
        }
    }//GEN-LAST:event_jtfContactKeyTyped

    private void jtfICKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfICKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE) ){
            evt.consume();
        }
    }//GEN-LAST:event_jtfICKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffMaintenance().setVisible(true);
            }
        });
    }

    public void setLoginUser(String loginUser) {
        this.loginUser = loginUser;
    }
    
    public String getLoginUser(){
        return loginUser;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton jbtSearch;
    private javax.swing.JComboBox jcbPosition;
    private javax.swing.JComboBox jcbStaffStatus;
    private com.toedter.calendar.JDateChooser jdcDOB;
    private javax.swing.JTextArea jtaAddr;
    private javax.swing.JTextField jtfContact;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfIC;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfName;
    // End of variables declaration//GEN-END:variables
}
